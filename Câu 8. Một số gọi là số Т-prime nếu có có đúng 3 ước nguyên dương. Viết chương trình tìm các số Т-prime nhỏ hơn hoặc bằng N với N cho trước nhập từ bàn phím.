Một số gọi là số Т-prime nếu có có đúng 3 ước nguyên dương. Viết chương trình tìm
các số Т-prime nhỏ hơn hoặc bằng N với N cho trước nhập từ bàn phím.

* Note: bản chất thằng t_prime này nó chỉ có thể là bằng nó , 1 và căn bặc 2 của nó mà thôi và căn bặc 2 của nó phải là một số nguyên tố 

#include <stdio.h>
#include <math.h>

// Hàm kiểm tra xem một số có phải là số nguyên tố hay không
int is_prime(int num) {
    if (num <= 1) return 0; // Nếu số nhỏ hơn hoặc bằng 1 thì không phải số nguyên tố
    if (num == 2) return 1; // 2 là số nguyên tố
    if (num % 2 == 0) return 0; // Nếu là số chẵn khác 2 thì không phải số nguyên tố
    for (int i = 3; i * i <= num; i += 2) {
        if (num % i == 0) return 0; // Nếu có ước số khác 1 và chính nó thì không phải số nguyên tố
    }
    return 1; // Nếu không có ước số nào ngoài 1 và chính nó thì là số nguyên tố
}

// Hàm tìm các số T-prime nhỏ hơn hoặc bằng N
void find_t_primes(int N) {
    int p = 2;
    while (p * p <= N) {
        // Kiểm tra xem p có phải là số nguyên tố hay không
        if (is_prime(p)) {
            // Tính p^2
            int t_prime = p * p;
            // Nếu t_prime <= N thì in ra và tiếp tục kiểm tra
            if (t_prime <= N) {
                printf("%d ", t_prime);
            } else {
                break;
            }
        }
        p++;
    }
}

int main() {
    int N;
    printf("Nhap so N de tim cac so T-prime nho hon hoac bang N: ");
    scanf("%d", &N);
    
    printf("Cac so T-prime nho hon hoac bang %d la: ", N);
    find_t_primes(N);
    
    return 0;
}
